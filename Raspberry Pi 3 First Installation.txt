라즈베리파이 초기 셋팅
-------------------------------
sudo apt-get update && sudo apt-get upgrade 로 라즈베리안 os 최신업데이트

opencv
python3-pip
pyttsx3
git-core
espeak
------------------------------
1. python3-pip
----> sudo apt-get install python3-pip

2. pip upgrade
----> sudo pip3 install --upgrade pip

3. pyttsx3
----> sudo pip3 install pyttsx3

4. espeak
----> sudo apt-get install espeak

5. git
----> sudo apt-get install git-core

6. opencv
----> pkg-config --modversion opencv ----version check (3.4.1 check)
----> sudo apt-get purge  libopencv* python-opencv
----> sudo apt-get autoremove
----> sudo apt-get update && sudo apt-get upgrade
----> sudo apt-get install build-essential cmake
----> sudo apt-get install pkg-config

-----특정포맷의 이미지 파일불러오거나 기록하기 위해 필요한 패키지-----
----> sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev 

-----특정 코덱의 비디오 파일을 읽어오거나 기록하기 위해 필요한 패키지-----
----> sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libxvidcore-dev libx264-dev libxine2-dev

-----Video4Linux패키지 리눅스에서 실시간 비디오 캡처를 지원하기 위한 디바이스 드라이버와 API-----
----> sudo apt-get install libv4l-dev v4l-utils

-----GStreamer 비디오 스트리밍 위한 라이브러리-----
----> sudo apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 

-----opencv에서 highui모듈 사용하여 자체적으로 윈도우 생성 및 이미지나 비디오 보여주는 설치-----
----> sudo apt-get install libqt4-dev 

-----OpenGL 패키지-----
----> sudo apt-get install mesa-utils libgl1-mesa-dri libqt4-opengl-dev 

-----Opencv 최적화 패키지-----
----> sudo apt-get install libatlas-base-dev gfortran libeigen3-dev

-----OpenCV-Python 바인딩을 위해 필요한 패키지-----
----> sudo apt-get install python2.7-dev python3-dev python-numpy python3-numpy

----> cd
----> mkdir opencv
----> cd opencv
----> wget -O opencv.zip https://github.com/opencv/opencv/archive/3.4.0.zip
----> unzip opencv.zip
----> wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/3.4.0.zip
----> unzip opencv_contrib.zip
----> ls -d */  (opencv-3.4.0  opencv_contrib-3.4.0 폴더 확인)
----> cd opencv-3.4.0
----> mkdir build
----> cd build
---->
cmake -D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D WITH_TBB=OFF \
-D WITH_IPP=OFF \
-D WITH_1394=OFF \
-D BUILD_WITH_DEBUG_INFO=OFF \
-D BUILD_DOCS=OFF \
-D INSTALL_C_EXAMPLES=ON \
-D INSTALL_PYTHON_EXAMPLES=ON \
-D BUILD_EXAMPLES=OFF \
-D BUILD_TESTS=OFF \
-D BUILD_PERF_TESTS=OFF \
-D ENABLE_NEON=ON \
-D WITH_QT=ON \
-D WITH_OPENGL=ON \
-D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-3.4.0/modules \
-D WITH_V4L=ON  \
-D WITH_FFMPEG=ON \
-D WITH_XINE=ON \
-D BUILD_NEW_PYTHON_SUPPORT=ON \
../
(-- Configuring done
-- Generating done
-- Build files have been written to: /home/pi/opencv/opencv-3.4.0/build 이 세 줄 성공 확인)
----> time make
----> sudo make install

7. espeak-data
----> cd
----> sudo git clone https://github.com/dys0763/espeak-data.git

8. tts.py

import pyttsx3
engine = pyttsx3.init()
engine.setProperty('rate', 100)
engine.setProperty('voice', 'fk')

x = "한국어 음성합성 테스트 입니다."
engine.say(x)

engine.runAndWait()

9. tesseract-ocr
----> sudo apt-get install tesseract-ocr
----> sudo pip3 install pytesseract

